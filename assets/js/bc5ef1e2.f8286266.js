"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9094],{5655:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"Local Search","title":"Local Search","description":"* As a stand-alone incomplete local search solver that can be invoked using a tactic called sls-smt.","source":"@site/docs-programming/07 - Local Search.md","sourceDirName":".","slug":"/Local Search","permalink":"/z3guide/programming/Local Search","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/z3guide/tree/main/website/docs-programming/07 - Local Search.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"Local Search","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"Proof Logs","permalink":"/z3guide/programming/Proof Logs"}}');var a=n(4848),i=n(8453);n(6851);const t={title:"Local Search",sidebar_position:7},r="Local Search",c={},o=[];function h(e){const s={a:"a",em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"local-search",children:"Local Search"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["As a stand-alone incomplete local search solver that can be invoked using a tactic called ",(0,a.jsx)(s.em,{children:"sls-smt"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Within a sequential integration with CDCL(T). It is enabled by setting ",(0,a.jsx)("t",{children:"smt.sls.enable=true, smt.sls.parallel=false"}),".\nIt integrates with CDCL(T) as a theory solver that invokes local search periodically. It is invoked during restarts,\nfinal checks and when the solver transitions from a total assignment to the propositional abstraction of the formula being solved."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsx)(s.p,{children:"As a parallel solver that is spawned in tandem with CDCL solving. It has an advantage over the sequential\nsolver that no fine-grained resource budgeting is required to fairly divide time between local solving and CDCL."}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["The sequential and parallel solvers synchronize learned units, candidate value assignments,\nphase and branching priorities.\nThe local search solver parameters can be fine-tuned by setting parameters in the ",(0,a.jsx)(s.a,{href:"Parameters#sls",children:"sls"})," namespace."]}),"\n",(0,a.jsx)(s.p,{children:"Typical settings:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["z3 smt.sls.enable=true ",(0,a.jsx)(s.em,{children:"file"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"enable SLS to run in parallel with the default solver"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:['z3 smt.sls.enable=true tactic.default_tactic="(then simplify propagate-values solve-eqs elim-uncnstr2 smt)" ',(0,a.jsx)(s.em,{children:"file"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"force to use the SMT solver, necessary for benchmarks such as bit-vectors"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["z3 smt.sls.enable=true smt.sls.parallel=false ",(0,a.jsx)(s.em,{children:"file"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"use sequential mode integration of local search, CDCL and SLS take turns"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:['z3 tactic.default_tactic="(then simplify propagate-values solve-eqs elim-uncnstr2 sls-smt)" ',(0,a.jsx)(s.em,{children:"file"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"run only the SLS solver"}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);