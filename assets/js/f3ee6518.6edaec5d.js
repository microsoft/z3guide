"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6664],{5957:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"fixedpoints/syntax","title":"Syntax","description":"Three different text-based input formats are accepted.","source":"@site/docs-smtlib/05 - fixedpoints/05 - syntax.md","sourceDirName":"05 - fixedpoints","slug":"/fixedpoints/syntax","permalink":"/z3guide/docs/fixedpoints/syntax","draft":false,"unlisted":false,"editUrl":"https://github.com/microsoft/z3guide/tree/main/website/docs-smtlib/05 - fixedpoints/05 - syntax.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Syntax","sidebar_position":5},"sidebar":"smtlibSidebar","previous":{"title":"Generalized PDR with SPACER","permalink":"/z3guide/docs/fixedpoints/engineforpdr"}}');var r=n(4848),s=n(8453),a=n(6851);const o={title:"Syntax",sidebar_position:5},l=void 0,d={},c=[{value:"Basic datalog",id:"basic-datalog",level:2},{value:"SMT-LIB2 extension",id:"smt-lib2-extension",level:2},{value:"Pure SMT-LIB2",id:"pure-smt-lib2",level:2},{value:"Note the following:",id:"note-the-following",level:2},{value:"Programmatic API",id:"programmatic-api",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Three different text-based input formats are accepted."}),"\n",(0,r.jsx)(t.h2,{id:"basic-datalog",children:"Basic datalog"}),"\n",(0,r.jsx)(t.p,{children:"Files with suffix .datalog are parsed using the BDDBDDB format. The format can be used for comparing benchmarks with the BDDBDDB tool."}),"\n",(0,r.jsx)(t.p,{children:"We use an artificial program to illustrate the basic Datalog format that complies to the format used by BDDBDDB."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'Z 64\n\nP0(x: Z) input\nGt0(x : Z, y : Z) input\nR(x : Z) printtuples\nS(x : Z) printtuples\nGt(x : Z, y : Z) printtuples\nGt(x,y) :- Gt0(x,y).\nGt(x,y) :- Gt(x,z), Gt(z,y).\nR(x) :- Gt(x,_).\nS(x) :- Gt(x,x0), Gt0(x,y), Gt0(y,z), P0(z).\nGt0("a","b").\nGt0("b","c").\nGt0("c","d").\nGt0("a1","b").\nGt0("b","a1").\nGt0("d","d1").\nGt0("d1","d").\nP0("a1").\n'})}),"\n",(0,r.jsx)(t.h2,{id:"smt-lib2-extension",children:"SMT-LIB2 extension"}),"\n",(0,r.jsx)(t.p,{children:"The following commands are added to the SMT-LIB2 syntax:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"(declare-var [var] [sort])"})," Declare a variable that is universally quantified in Horn clauses."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"(declare-rel [relation-name] ([sorts]))"})," Declare relation signature. Relations are uninterpreted."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"(rule [universal-horn-formula])"})," Assert a rule or a fact as a universally quantified Horn formula."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"(query [relation-name])"})," Pose a query. Is the relation non-empty."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"(set-predicate-representation [function-name] [symbol]+)"})," Specify the representation of a predicate."]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"pure-smt-lib2",children:"Pure SMT-LIB2"}),"\n",(0,r.jsx)(t.p,{children:"Many problems about program safety can be reduced to Constrained Horn clause satisfiability, where constraints are modulo theories (typically of arithmetic). These problems are expressible directly in SMT-LIB2. The repository of Horn clause benchmarks in SMT-LIB2 contains more than 10,000 samples taken from different benchmarks and different encodings of the same benchmarks. An assertion is Horn if it is an implication; the head of the implication is either a formula using only interpreted functions, or it is an uninterpreted predicate; the body of the implication is a formula in negation normal form where the uninterpreted predicates occur positively."}),"\n",(0,r.jsx)(a.A,{input:'{"lang":"z3","highlight":"clojure","statusCodes":{"success":"z3-ran","timeout":"z3-timed-out","runError":"z3-failed","runtimeError":"z3-runtime-error"},"code":"(set-logic HORN)\\n(declare-fun mc (Int Int) Bool)\\n\\n(assert (forall ((m Int)) (=> (> m 100) (mc m (- m 10)))))\\n(assert (forall ((m Int) (n Int) (p Int)) \\n           (=> (and (<= m 100) (mc (+ m 11) p) (mc p n)) (mc m n))))\\n\\n(assert (forall ((m Int) (n Int))\\n       (=> (and (mc m n) (<= m 101)) (= n 91))))\\n(check-sat)\\n(get-model)","result":{"output":"sat\\n(\\n  (define-fun mc ((x!0 Int) (x!1 Int)) Bool\\n    (let ((a!1 (not (<= (+ x!0 (* (- 1) x!1)) 9))))\\n      (and (or (not (>= x!1 92)) a!1) (not (<= x!1 90)))))\\n)\\n","error":"","status":"z3-ran","hash":"79a92d0e4ec2489288bb8d89ed3cc0bc25f7f5b8"},"githubRepo":"Z3Prover/z3","editable":false,"readonly":false,"showLineNumbers":true,"langVersion":"4.12.1","tool":"z3-solver"}'}),"\n",(0,r.jsx)(t.h2,{id:"note-the-following",children:"Note the following:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["To ensure that the fixedpoint engine is used, specify ",(0,r.jsx)(t.code,{children:"(set-logic HORN)"})]}),"\n",(0,r.jsx)(t.li,{children:"There is no separate query. Instead, queries correspond to Horn clause that have no positive occurrence of any uninterpreted relation."}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"programmatic-api",children:"Programmatic API"}),"\n",(0,r.jsxs)(t.p,{children:["You can interact with muZ over the programmatic API from ",(0,r.jsx)(t.a,{href:"https://z3prover.github.io/api/html/classz3py_1_1_fixedpoint.html",children:"Python"}),", ",(0,r.jsx)(t.a,{href:"https://z3prover.github.io/api/html/z3__fixedpoint_8h.html",children:"C"}),", ",(0,r.jsx)(t.a,{href:"https://z3prover.github.io/api/html/classz3_1_1fixedpoint.html",children:"C++"}),", OCaml, Java, and .NET. The APIs support adding rules and posing queries."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);