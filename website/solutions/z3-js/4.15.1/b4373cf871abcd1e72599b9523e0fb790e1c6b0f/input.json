{"input":"const { Array, BitVec } = Z3;\nconst mod = 1n << 32n;\nconst arr1 = Array.const('arr', BitVec.sort(2), BitVec.sort(32));\nconst arr2 = Array.const('arr2', BitVec.sort(2), BitVec.sort(32));\nconst same_sum = arr1.select(0)\n    .add(arr1.select(1))\n    .add(arr1.select(2))\n    .add(arr1.select(3))\n    .eq(\n      arr2.select(0)\n        .add(arr2.select(1))\n        .add(arr2.select(2))\n        .add(arr2.select(3))\n    );\nconst different = arr1.select(0).neq(arr2.select(0))\n    .or(arr1.select(1).neq(arr2.select(1)))\n    .or(arr1.select(2).neq(arr2.select(2)))\n    .or(arr1.select(3).neq(arr2.select(3)));\n    \nconst model = await Z3.solve(same_sum.and(different)) as Model;\nconst arr1Vals = [0, 1, 2, 3].map(i => model.eval(arr1.select(i)).value());\nconst arr2Vals = [0, 1, 2, 3].map(i => model.eval(arr2.select(i)).value());\n\nvar buffer = \"\"\nfor (let i = 0; i < 4; i++) {\n    buffer += arr1Vals[i];\n    buffer += \" \"\n}\nbuffer += \"\\n\";\nfor (let i = 0; i < 4; i++) {\n    buffer += arr2Vals[i];\n    buffer += \" \"\n}\nbuffer += \"\\n\";\nbuffer"}
