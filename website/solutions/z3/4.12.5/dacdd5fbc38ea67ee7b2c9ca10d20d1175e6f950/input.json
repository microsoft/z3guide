{"input":"(set-option :smt.mbqi true)\n;; f an g are \"streams\"\n(declare-fun f (Int) Int)\n(declare-fun g (Int) Int)\n\n;; the segment [a, n + a] of stream f is equal to the segment [0, n] of stream g.\n(declare-const n Int)\n(declare-const a Int)\n(assert (forall ((x Int)) (=> (and (<= 0 x) (<= x n))\n                              (= (f (+ x a)) (g x)))))\n\n;; adding some constraints to a\n(assert (> a 10))\n(assert (>= (f a) 2))\n(assert (<= (g 3) (- 10)))\n\n(check-sat)\n(get-model)"}
