{"output":"sat\n(\n  ;; universe for Ptr:\n  ;;   Ptr!val!3 Ptr!val!6 Ptr!val!2 Ptr!val!0 Ptr!val!8 Ptr!val!9 Ptr!val!10 Ptr!val!7 Ptr!val!5 Ptr!val!1 Ptr!val!4 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun Ptr!val!3 () Ptr)\n  (declare-fun Ptr!val!6 () Ptr)\n  (declare-fun Ptr!val!2 () Ptr)\n  (declare-fun Ptr!val!0 () Ptr)\n  (declare-fun Ptr!val!8 () Ptr)\n  (declare-fun Ptr!val!9 () Ptr)\n  (declare-fun Ptr!val!10 () Ptr)\n  (declare-fun Ptr!val!7 () Ptr)\n  (declare-fun Ptr!val!5 () Ptr)\n  (declare-fun Ptr!val!1 () Ptr)\n  (declare-fun Ptr!val!4 () Ptr)\n  ;; cardinality constraint:\n  (forall ((x Ptr))\n          (or (= x Ptr!val!3)\n              (= x Ptr!val!6)\n              (= x Ptr!val!2)\n              (= x Ptr!val!0)\n              (= x Ptr!val!8)\n              (= x Ptr!val!9)\n              (= x Ptr!val!10)\n              (= x Ptr!val!7)\n              (= x Ptr!val!5)\n              (= x Ptr!val!1)\n              (= x Ptr!val!4)))\n  ;; -----------\n  (define-fun SLP () Int\n    3)\n  (define-fun null () Ptr\n    Ptr!val!1)\n  (define-fun x () Ptr\n    Ptr!val!0)\n  (define-fun RUN () Int\n    2)\n  (define-fun prev ((x!0 Ptr)) Ptr\n    (let ((a!1 (or (and (= x!0 Ptr!val!2)\n                        (not (= x!0 Ptr!val!6))\n                        (not (= x!0 Ptr!val!7))\n                        (not (= x!0 Ptr!val!8))\n                        (not (= x!0 Ptr!val!9)))\n                   (and (= x!0 Ptr!val!6)\n                        (not (= x!0 Ptr!val!7))\n                        (not (= x!0 Ptr!val!8))\n                        (not (= x!0 Ptr!val!9)))))\n          (a!2 (ite (and (= x!0 Ptr!val!0)\n                         (not (= x!0 Ptr!val!2))\n                         (not (= x!0 Ptr!val!6))\n                         (not (= x!0 Ptr!val!7))\n                         (not (= x!0 Ptr!val!8))\n                         (not (= x!0 Ptr!val!9)))\n                    Ptr!val!2\n                    Ptr!val!6)))\n    (let ((a!3 (ite (and (not (= x!0 Ptr!val!5))\n                         (not (= x!0 Ptr!val!4))\n                         (not (= x!0 Ptr!val!10))\n                         (not (= x!0 Ptr!val!1))\n                         (not (= x!0 Ptr!val!0))\n                         (not (= x!0 Ptr!val!2))\n                         (not (= x!0 Ptr!val!6))\n                         (not (= x!0 Ptr!val!7))\n                         (not (= x!0 Ptr!val!8))\n                         (not (= x!0 Ptr!val!9)))\n                    Ptr!val!0\n                    a!2)))\n    (let ((a!4 (ite (and (= x!0 Ptr!val!4)\n                         (not (= x!0 Ptr!val!10))\n                         (not (= x!0 Ptr!val!1))\n                         (not (= x!0 Ptr!val!0))\n                         (not (= x!0 Ptr!val!2))\n                         (not (= x!0 Ptr!val!6))\n                         (not (= x!0 Ptr!val!7))\n                         (not (= x!0 Ptr!val!8))\n                         (not (= x!0 Ptr!val!9)))\n                    Ptr!val!3\n                    a!3)))\n    (let ((a!5 (ite (and (= x!0 Ptr!val!5)\n                         (not (= x!0 Ptr!val!4))\n                         (not (= x!0 Ptr!val!10))\n                         (not (= x!0 Ptr!val!1))\n                         (not (= x!0 Ptr!val!0))\n                         (not (= x!0 Ptr!val!2))\n                         (not (= x!0 Ptr!val!6))\n                         (not (= x!0 Ptr!val!7))\n                         (not (= x!0 Ptr!val!8))\n                         (not (= x!0 Ptr!val!9)))\n                    Ptr!val!4\n                    a!4)))\n    (let ((a!6 (ite (and (= x!0 Ptr!val!10)\n                         (not (= x!0 Ptr!val!1))\n                         (not (= x!0 Ptr!val!0))\n                         (not (= x!0 Ptr!val!2))\n                         (not (= x!0 Ptr!val!6))\n                         (not (= x!0 Ptr!val!7))\n                         (not (= x!0 Ptr!val!8))\n                         (not (= x!0 Ptr!val!9)))\n                    Ptr!val!9\n                    (ite (= x!0 Ptr!val!9) Ptr!val!8 a!5))))\n      (ite (and (= x!0 Ptr!val!8) (not (= x!0 Ptr!val!9)))\n           Ptr!val!7\n           (ite a!1 Ptr!val!1 a!6))))))))\n  (define-fun k!29 ((x!0 Ptr)) Ptr\n    (ite (= x!0 Ptr!val!5) Ptr!val!5\n    (ite (= x!0 Ptr!val!4) Ptr!val!4\n    (ite (= x!0 Ptr!val!10) Ptr!val!10\n    (ite (= x!0 Ptr!val!1) Ptr!val!1\n    (ite (= x!0 Ptr!val!0) Ptr!val!0\n    (ite (= x!0 Ptr!val!2) Ptr!val!2\n    (ite (= x!0 Ptr!val!6) Ptr!val!6\n    (ite (= x!0 Ptr!val!7) Ptr!val!7\n    (ite (= x!0 Ptr!val!8) Ptr!val!8\n    (ite (= x!0 Ptr!val!9) Ptr!val!9\n      Ptr!val!3)))))))))))\n  (define-fun next ((x!0 Ptr)) Ptr\n    (let ((a!1 (ite (= (k!29 x!0) Ptr!val!3)\n                    Ptr!val!4\n                    (ite (= (k!29 x!0) Ptr!val!0) Ptr!val!3 Ptr!val!0))))\n    (let ((a!2 (ite (= (k!29 x!0) Ptr!val!5)\n                    Ptr!val!1\n                    (ite (= (k!29 x!0) Ptr!val!4) Ptr!val!5 a!1))))\n    (let ((a!3 (ite (= (k!29 x!0) Ptr!val!7)\n                    Ptr!val!8\n                    (ite (= (k!29 x!0) Ptr!val!6) Ptr!val!7 a!2))))\n    (let ((a!4 (ite (= (k!29 x!0) Ptr!val!9)\n                    Ptr!val!10\n                    (ite (= (k!29 x!0) Ptr!val!8) Ptr!val!9 a!3))))\n      (ite (= (k!29 x!0) Ptr!val!10) Ptr!val!1 a!4))))))\n  (define-fun new-prev ((x!0 Ptr)) Ptr\n    (ite (= x!0 Ptr!val!0) Ptr!val!2\n    (ite (= x!0 Ptr!val!3) Ptr!val!0\n    (ite (= x!0 Ptr!val!4) Ptr!val!3\n    (ite (= x!0 Ptr!val!5) Ptr!val!4\n    (ite (= x!0 Ptr!val!1) Ptr!val!6\n    (ite (= x!0 Ptr!val!7) Ptr!val!6\n    (ite (= x!0 Ptr!val!6) Ptr!val!1\n    (ite (= x!0 Ptr!val!2) Ptr!val!1\n    (ite (= x!0 Ptr!val!8) Ptr!val!7\n    (ite (= x!0 Ptr!val!10) Ptr!val!9\n    (ite (= x!0 Ptr!val!9) Ptr!val!8\n      (prev x!0)))))))))))))\n  (define-fun prio ((x!0 Ptr)) Int\n    (let ((a!1 (ite (or (= (k!29 x!0) Ptr!val!4)\n                        (= (k!29 x!0) Ptr!val!2)\n                        (= (k!29 x!0) Ptr!val!3)\n                        (= (k!29 x!0) Ptr!val!0)\n                        (= (k!29 x!0) Ptr!val!5))\n                    4\n                    13)))\n    (let ((a!2 (ite (= (k!29 x!0) Ptr!val!6)\n                    7\n                    (ite (= (k!29 x!0) Ptr!val!1) 5 a!1))))\n    (let ((a!3 (ite (= (k!29 x!0) Ptr!val!8)\n                    10\n                    (ite (= (k!29 x!0) Ptr!val!7) 8 a!2))))\n      (ite (= (k!29 x!0) Ptr!val!9) 12 (ite (= (k!29 x!0) Ptr!val!10) 11 a!3))))))\n  (define-fun state ((x!0 Ptr)) Int\n    (let ((a!1 (ite (or (= (k!29 x!0) Ptr!val!4)\n                        (= (k!29 x!0) Ptr!val!2)\n                        (= (k!29 x!0) Ptr!val!3)\n                        (= (k!29 x!0) Ptr!val!0)\n                        (= (k!29 x!0) Ptr!val!5))\n                    2\n                    14)))\n      (ite (or (= (k!29 x!0) Ptr!val!7)\n               (= (k!29 x!0) Ptr!val!9)\n               (= (k!29 x!0) Ptr!val!8)\n               (= (k!29 x!0) Ptr!val!10)\n               (= (k!29 x!0) Ptr!val!6))\n           9\n           (ite (= (k!29 x!0) Ptr!val!1) 6 a!1))))\n  (define-fun new-next ((x!0 Ptr)) Ptr\n    (ite (= x!0 Ptr!val!0) Ptr!val!1\n    (ite (= x!0 Ptr!val!2) Ptr!val!3\n    (ite (= x!0 Ptr!val!3) Ptr!val!4\n    (ite (= x!0 Ptr!val!4) Ptr!val!5\n    (ite (= x!0 Ptr!val!5) Ptr!val!1\n    (ite (= x!0 Ptr!val!6) Ptr!val!7\n    (ite (= x!0 Ptr!val!1) Ptr!val!0\n    (ite (= x!0 Ptr!val!7) Ptr!val!8\n    (ite (= x!0 Ptr!val!10) Ptr!val!1\n    (ite (= x!0 Ptr!val!9) Ptr!val!10\n    (ite (= x!0 Ptr!val!8) Ptr!val!9\n      (next x!0)))))))))))))\n  (define-fun new-prio ((x!0 Ptr)) Int\n    (ite (= x!0 Ptr!val!3) 4\n    (ite (= x!0 Ptr!val!0) 4\n    (ite (= x!0 Ptr!val!4) 4\n    (ite (= x!0 Ptr!val!2) 4\n    (ite (= x!0 Ptr!val!5) 4\n    (ite (= x!0 Ptr!val!1) 5\n    (ite (= x!0 Ptr!val!7) 8\n    (ite (= x!0 Ptr!val!6) 7\n    (ite (= x!0 Ptr!val!8) 10\n    (ite (= x!0 Ptr!val!10) 11\n    (ite (= x!0 Ptr!val!9) 12\n      (prio x!0)))))))))))))\n  (define-fun new-state ((x!0 Ptr)) Int\n    (ite (= x!0 Ptr!val!0) 3\n    (ite (= x!0 Ptr!val!3) 2\n    (ite (= x!0 Ptr!val!2) 2\n    (ite (= x!0 Ptr!val!4) 2\n    (ite (= x!0 Ptr!val!5) 2\n    (ite (= x!0 Ptr!val!1) 6\n    (ite (= x!0 Ptr!val!7) 9\n    (ite (= x!0 Ptr!val!6) 9\n    (ite (= x!0 Ptr!val!8) 9\n    (ite (= x!0 Ptr!val!10) 9\n    (ite (= x!0 Ptr!val!9) 9\n      (state x!0)))))))))))))\n)\nWhy it is not valid\nTrying again using a fresh constant bad-ptr as an witness for the failure...\nsat\n(\n  ;; universe for Ptr:\n  ;;   Ptr!val!10 Ptr!val!13 Ptr!val!9 Ptr!val!14 Ptr!val!16 Ptr!val!18 Ptr!val!11 Ptr!val!19 Ptr!val!7 Ptr!val!5 Ptr!val!4 Ptr!val!3 Ptr!val!6 Ptr!val!2 Ptr!val!8 Ptr!val!17 Ptr!val!12 Ptr!val!1 Ptr!val!15 Ptr!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun Ptr!val!10 () Ptr)\n  (declare-fun Ptr!val!13 () Ptr)\n  (declare-fun Ptr!val!9 () Ptr)\n  (declare-fun Ptr!val!14 () Ptr)\n  (declare-fun Ptr!val!16 () Ptr)\n  (declare-fun Ptr!val!18 () Ptr)\n  (declare-fun Ptr!val!11 () Ptr)\n  (declare-fun Ptr!val!19 () Ptr)\n  (declare-fun Ptr!val!7 () Ptr)\n  (declare-fun Ptr!val!5 () Ptr)\n  (declare-fun Ptr!val!4 () Ptr)\n  (declare-fun Ptr!val!3 () Ptr)\n  (declare-fun Ptr!val!6 () Ptr)\n  (declare-fun Ptr!val!2 () Ptr)\n  (declare-fun Ptr!val!8 () Ptr)\n  (declare-fun Ptr!val!17 () Ptr)\n  (declare-fun Ptr!val!12 () Ptr)\n  (declare-fun Ptr!val!1 () Ptr)\n  (declare-fun Ptr!val!15 () Ptr)\n  (declare-fun Ptr!val!0 () Ptr)\n  ;; cardinality constraint:\n  (forall ((x Ptr))\n          (or (= x Ptr!val!10)\n              (= x Ptr!val!13)\n              (= x Ptr!val!9)\n              (= x Ptr!val!14)\n              (= x Ptr!val!16)\n              (= x Ptr!val!18)\n              (= x Ptr!val!11)\n              (= x Ptr!val!19)\n              (= x Ptr!val!7)\n              (= x Ptr!val!5)\n              (= x Ptr!val!4)\n              (= x Ptr!val!3)\n              (= x Ptr!val!6)\n              (= x Ptr!val!2)\n              (= x Ptr!val!8)\n              (= x Ptr!val!17)\n              (= x Ptr!val!12)\n              (= x Ptr!val!1)\n              (= x Ptr!val!15)\n              (= x Ptr!val!0)))\n  ;; -----------\n  (define-fun bad-ptr () Ptr\n    Ptr!val!2)\n  (define-fun SLP () Int\n    3)\n  (define-fun x () Ptr\n    Ptr!val!0)\n  (define-fun RUN () Int\n    2)\n  (define-fun null () Ptr\n    Ptr!val!1)\n  (define-fun prev ((x!0 Ptr)) Ptr\n    (ite (= x!0 Ptr!val!11) Ptr!val!10\n      (let ((a!1 (or (and (= x!0 Ptr!val!19)\n                          (not (= x!0 Ptr!val!18))\n                          (not (= x!0 Ptr!val!11)))\n                     (and (= x!0 Ptr!val!18) (not (= x!0 Ptr!val!11)))))\n            (a!2 (ite (and (= x!0 Ptr!val!0)\n                           (not (= x!0 Ptr!val!4))\n                           (not (= x!0 Ptr!val!17))\n                           (not (= x!0 Ptr!val!10))\n                           (not (= x!0 Ptr!val!1))\n                           (not (= x!0 Ptr!val!2))\n                           (not (= x!0 Ptr!val!13))\n                           (not (= x!0 Ptr!val!5))\n                           (not (= x!0 Ptr!val!6))\n                           (not (= x!0 Ptr!val!15))\n                           (not (= x!0 Ptr!val!7))\n                           (not (= x!0 Ptr!val!14))\n                           (not (= x!0 Ptr!val!8))\n                           (not (= x!0 Ptr!val!12))\n                           (not (= x!0 Ptr!val!16))\n                           (not (= x!0 Ptr!val!9))\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!2\n                      Ptr!val!6)))\n      (let ((a!3 (ite (and (not (= x!0 Ptr!val!0))\n                           (not (= x!0 Ptr!val!4))\n                           (not (= x!0 Ptr!val!17))\n                           (not (= x!0 Ptr!val!10))\n                           (not (= x!0 Ptr!val!1))\n                           (not (= x!0 Ptr!val!2))\n                           (not (= x!0 Ptr!val!13))\n                           (not (= x!0 Ptr!val!5))\n                           (not (= x!0 Ptr!val!6))\n                           (not (= x!0 Ptr!val!15))\n                           (not (= x!0 Ptr!val!7))\n                           (not (= x!0 Ptr!val!14))\n                           (not (= x!0 Ptr!val!8))\n                           (not (= x!0 Ptr!val!12))\n                           (not (= x!0 Ptr!val!16))\n                           (not (= x!0 Ptr!val!9))\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!0\n                      a!2)))\n      (let ((a!4 (ite (and (= x!0 Ptr!val!4)\n                           (not (= x!0 Ptr!val!17))\n                           (not (= x!0 Ptr!val!10))\n                           (not (= x!0 Ptr!val!1))\n                           (not (= x!0 Ptr!val!2))\n                           (not (= x!0 Ptr!val!13))\n                           (not (= x!0 Ptr!val!5))\n                           (not (= x!0 Ptr!val!6))\n                           (not (= x!0 Ptr!val!15))\n                           (not (= x!0 Ptr!val!7))\n                           (not (= x!0 Ptr!val!14))\n                           (not (= x!0 Ptr!val!8))\n                           (not (= x!0 Ptr!val!12))\n                           (not (= x!0 Ptr!val!16))\n                           (not (= x!0 Ptr!val!9))\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!3\n                      a!3)))\n      (let ((a!5 (ite (and (= x!0 Ptr!val!5)\n                           (not (= x!0 Ptr!val!6))\n                           (not (= x!0 Ptr!val!15))\n                           (not (= x!0 Ptr!val!7))\n                           (not (= x!0 Ptr!val!14))\n                           (not (= x!0 Ptr!val!8))\n                           (not (= x!0 Ptr!val!12))\n                           (not (= x!0 Ptr!val!16))\n                           (not (= x!0 Ptr!val!9))\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!4\n                      a!4)))\n      (let ((a!6 (ite (and (= x!0 Ptr!val!8)\n                           (not (= x!0 Ptr!val!12))\n                           (not (= x!0 Ptr!val!16))\n                           (not (= x!0 Ptr!val!9))\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!7\n                      a!5)))\n      (let ((a!7 (ite (and (= x!0 Ptr!val!9)\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!8\n                      a!6)))\n      (let ((a!8 (ite (and (= x!0 Ptr!val!10)\n                           (not (= x!0 Ptr!val!1))\n                           (not (= x!0 Ptr!val!2))\n                           (not (= x!0 Ptr!val!13))\n                           (not (= x!0 Ptr!val!5))\n                           (not (= x!0 Ptr!val!6))\n                           (not (= x!0 Ptr!val!15))\n                           (not (= x!0 Ptr!val!7))\n                           (not (= x!0 Ptr!val!14))\n                           (not (= x!0 Ptr!val!8))\n                           (not (= x!0 Ptr!val!12))\n                           (not (= x!0 Ptr!val!16))\n                           (not (= x!0 Ptr!val!9))\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!9\n                      a!7)))\n      (let ((a!9 (ite (and (= x!0 Ptr!val!2)\n                           (not (= x!0 Ptr!val!13))\n                           (not (= x!0 Ptr!val!5))\n                           (not (= x!0 Ptr!val!6))\n                           (not (= x!0 Ptr!val!15))\n                           (not (= x!0 Ptr!val!7))\n                           (not (= x!0 Ptr!val!14))\n                           (not (= x!0 Ptr!val!8))\n                           (not (= x!0 Ptr!val!12))\n                           (not (= x!0 Ptr!val!16))\n                           (not (= x!0 Ptr!val!9))\n                           (not (= x!0 Ptr!val!19))\n                           (not (= x!0 Ptr!val!18))\n                           (not (= x!0 Ptr!val!11)))\n                      Ptr!val!14\n                      a!8)))\n      (let ((a!10 (ite (and (= x!0 Ptr!val!6)\n                            (not (= x!0 Ptr!val!15))\n                            (not (= x!0 Ptr!val!7))\n                            (not (= x!0 Ptr!val!14))\n                            (not (= x!0 Ptr!val!8))\n                            (not (= x!0 Ptr!val!12))\n                            (not (= x!0 Ptr!val!16))\n                            (not (= x!0 Ptr!val!9))\n                            (not (= x!0 Ptr!val!19))\n                            (not (= x!0 Ptr!val!18))\n                            (not (= x!0 Ptr!val!11)))\n                       Ptr!val!12\n                       a!9)))\n      (let ((a!11 (ite (and (= x!0 Ptr!val!14)\n                            (not (= x!0 Ptr!val!8))\n                            (not (= x!0 Ptr!val!12))\n                            (not (= x!0 Ptr!val!16))\n                            (not (= x!0 Ptr!val!9))\n                            (not (= x!0 Ptr!val!19))\n                            (not (= x!0 Ptr!val!18))\n                            (not (= x!0 Ptr!val!11)))\n                       Ptr!val!13\n                       a!10)))\n      (let ((a!12 (ite (and (= x!0 Ptr!val!13)\n                            (not (= x!0 Ptr!val!5))\n                            (not (= x!0 Ptr!val!6))\n                            (not (= x!0 Ptr!val!15))\n                            (not (= x!0 Ptr!val!7))\n                            (not (= x!0 Ptr!val!14))\n                            (not (= x!0 Ptr!val!8))\n                            (not (= x!0 Ptr!val!12))\n                            (not (= x!0 Ptr!val!16))\n                            (not (= x!0 Ptr!val!9))\n                            (not (= x!0 Ptr!val!19))\n                            (not (= x!0 Ptr!val!18))\n                            (not (= x!0 Ptr!val!11)))\n                       Ptr!val!15\n                       a!11)))\n      (let ((a!13 (ite (and (= x!0 Ptr!val!12)\n                            (not (= x!0 Ptr!val!16))\n                            (not (= x!0 Ptr!val!9))\n                            (not (= x!0 Ptr!val!19))\n                            (not (= x!0 Ptr!val!18))\n                            (not (= x!0 Ptr!val!11)))\n                       Ptr!val!16\n                       a!12)))\n      (let ((a!14 (ite (and (= x!0 Ptr!val!15)\n                            (not (= x!0 Ptr!val!7))\n                            (not (= x!0 Ptr!val!14))\n                            (not (= x!0 Ptr!val!8))\n                            (not (= x!0 Ptr!val!12))\n                            (not (= x!0 Ptr!val!16))\n                            (not (= x!0 Ptr!val!9))\n                            (not (= x!0 Ptr!val!19))\n                            (not (= x!0 Ptr!val!18))\n                            (not (= x!0 Ptr!val!11)))\n                       Ptr!val!17\n                       a!13)))\n      (let ((a!15 (ite (and (= x!0 Ptr!val!16)\n                            (not (= x!0 Ptr!val!9))\n                            (not (= x!0 Ptr!val!19))\n                            (not (= x!0 Ptr!val!18))\n                            (not (= x!0 Ptr!val!11)))\n                       Ptr!val!18\n                       a!14)))\n      (let ((a!16 (ite (and (= x!0 Ptr!val!17)\n                            (not (= x!0 Ptr!val!10))\n                            (not (= x!0 Ptr!val!1))\n                            (not (= x!0 Ptr!val!2))\n                            (not (= x!0 Ptr!val!13))\n                            (not (= x!0 Ptr!val!5))\n                            (not (= x!0 Ptr!val!6))\n                            (not (= x!0 Ptr!val!15))\n                            (not (= x!0 Ptr!val!7))\n                            (not (= x!0 Ptr!val!14))\n                            (not (= x!0 Ptr!val!8))\n                            (not (= x!0 Ptr!val!12))\n                            (not (= x!0 Ptr!val!16))\n                            (not (= x!0 Ptr!val!9))\n                            (not (= x!0 Ptr!val!19))\n                            (not (= x!0 Ptr!val!18))\n                            (not (= x!0 Ptr!val!11)))\n                       Ptr!val!19\n                       a!15)))\n        (ite a!1 Ptr!val!1 a!16))))))))))))))))))\n  (define-fun k!127 ((x!0 Ptr)) Ptr\n    (ite (= x!0 Ptr!val!0) Ptr!val!0\n    (ite (= x!0 Ptr!val!4) Ptr!val!4\n    (ite (= x!0 Ptr!val!17) Ptr!val!17\n    (ite (= x!0 Ptr!val!10) Ptr!val!10\n    (ite (= x!0 Ptr!val!1) Ptr!val!1\n    (ite (= x!0 Ptr!val!2) Ptr!val!2\n    (ite (= x!0 Ptr!val!13) Ptr!val!13\n    (ite (= x!0 Ptr!val!5) Ptr!val!5\n    (ite (= x!0 Ptr!val!6) Ptr!val!6\n    (ite (= x!0 Ptr!val!15) Ptr!val!15\n    (ite (= x!0 Ptr!val!7) Ptr!val!7\n    (ite (= x!0 Ptr!val!14) Ptr!val!14\n    (ite (= x!0 Ptr!val!8) Ptr!val!8\n    (ite (= x!0 Ptr!val!12) Ptr!val!12\n    (ite (= x!0 Ptr!val!16) Ptr!val!16\n    (ite (= x!0 Ptr!val!9) Ptr!val!9\n    (ite (= x!0 Ptr!val!19) Ptr!val!19\n    (ite (= x!0 Ptr!val!18) Ptr!val!18\n    (ite (= x!0 Ptr!val!11) Ptr!val!11\n      Ptr!val!3))))))))))))))))))))\n  (define-fun next ((x!0 Ptr)) Ptr\n    (let ((a!1 (ite (= (k!127 x!0) Ptr!val!3)\n                    Ptr!val!4\n                    (ite (= (k!127 x!0) Ptr!val!0) Ptr!val!3 Ptr!val!0))))\n    (let ((a!2 (ite (= (k!127 x!0) Ptr!val!5)\n                    Ptr!val!1\n                    (ite (= (k!127 x!0) Ptr!val!4) Ptr!val!5 a!1))))\n    (let ((a!3 (ite (= (k!127 x!0) Ptr!val!7)\n                    Ptr!val!8\n                    (ite (= (k!127 x!0) Ptr!val!6) Ptr!val!7 a!2))))\n    (let ((a!4 (ite (= (k!127 x!0) Ptr!val!9)\n                    Ptr!val!10\n                    (ite (= (k!127 x!0) Ptr!val!8) Ptr!val!9 a!3))))\n    (let ((a!5 (ite (= (k!127 x!0) Ptr!val!11)\n                    Ptr!val!1\n                    (ite (= (k!127 x!0) Ptr!val!10) Ptr!val!11 a!4))))\n    (let ((a!6 (ite (= (k!127 x!0) Ptr!val!13)\n                    Ptr!val!14\n                    (ite (= (k!127 x!0) Ptr!val!12) Ptr!val!6 a!5))))\n    (let ((a!7 (ite (= (k!127 x!0) Ptr!val!15)\n                    Ptr!val!13\n                    (ite (= (k!127 x!0) Ptr!val!14) Ptr!val!2 a!6))))\n    (let ((a!8 (ite (= (k!127 x!0) Ptr!val!17)\n                    Ptr!val!15\n                    (ite (= (k!127 x!0) Ptr!val!16) Ptr!val!12 a!7))))\n      (ite (= (k!127 x!0) Ptr!val!19)\n           Ptr!val!17\n           (ite (= (k!127 x!0) Ptr!val!18) Ptr!val!16 a!8)))))))))))\n  (define-fun new-prev ((x!0 Ptr)) Ptr\n    (ite (= x!0 Ptr!val!0) Ptr!val!2\n    (ite (= x!0 Ptr!val!3) Ptr!val!0\n    (ite (= x!0 Ptr!val!4) Ptr!val!3\n    (ite (= x!0 Ptr!val!5) Ptr!val!4\n    (ite (= x!0 Ptr!val!1) Ptr!val!6\n    (ite (= x!0 Ptr!val!7) Ptr!val!6\n    (ite (= x!0 Ptr!val!2) Ptr!val!14\n    (ite (= x!0 Ptr!val!6) Ptr!val!12\n    (ite (= x!0 Ptr!val!14) Ptr!val!13\n    (ite (= x!0 Ptr!val!13) Ptr!val!15\n    (ite (= x!0 Ptr!val!12) Ptr!val!16\n    (ite (= x!0 Ptr!val!15) Ptr!val!17\n    (ite (= x!0 Ptr!val!17) Ptr!val!19\n    (ite (= x!0 Ptr!val!19) Ptr!val!1\n    (ite (= x!0 Ptr!val!16) Ptr!val!18\n    (ite (= x!0 Ptr!val!8) Ptr!val!7\n    (ite (= x!0 Ptr!val!18) Ptr!val!1\n    (ite (= x!0 Ptr!val!11) Ptr!val!10\n    (ite (= x!0 Ptr!val!10) Ptr!val!9\n    (ite (= x!0 Ptr!val!9) Ptr!val!8\n      (prev x!0))))))))))))))))))))))\n  (define-fun prio ((x!0 Ptr)) Int\n    (let ((a!1 (ite (or (= (k!127 x!0) Ptr!val!4)\n                        (= (k!127 x!0) Ptr!val!5)\n                        (= (k!127 x!0) Ptr!val!0)\n                        (= (k!127 x!0) Ptr!val!3)\n                        (= (k!127 x!0) Ptr!val!2))\n                    4\n                    17)))\n    (let ((a!2 (ite (= (k!127 x!0) Ptr!val!6)\n                    7\n                    (ite (= (k!127 x!0) Ptr!val!1) 5 a!1))))\n    (let ((a!3 (ite (= (k!127 x!0) Ptr!val!8)\n                    10\n                    (ite (= (k!127 x!0) Ptr!val!7) 8 a!2))))\n    (let ((a!4 (ite (or (= (k!127 x!0) Ptr!val!15)\n                        (= (k!127 x!0) Ptr!val!14)\n                        (= (k!127 x!0) Ptr!val!13))\n                    4\n                    (ite (= (k!127 x!0) Ptr!val!12) 11 a!3))))\n    (let ((a!5 (ite (or (= (k!127 x!0) Ptr!val!19) (= (k!127 x!0) Ptr!val!17))\n                    4\n                    (ite (= (k!127 x!0) Ptr!val!16) 12 a!4))))\n    (let ((a!6 (ite (= (k!127 x!0) Ptr!val!9)\n                    14\n                    (ite (= (k!127 x!0) Ptr!val!18) 13 a!5))))\n      (ite (= (k!127 x!0) Ptr!val!10)\n           16\n           (ite (= (k!127 x!0) Ptr!val!11) 15 a!6)))))))))\n  (define-fun state ((x!0 Ptr)) Int\n    (let ((a!1 (ite (or (= (k!127 x!0) Ptr!val!4)\n                        (= (k!127 x!0) Ptr!val!5)\n                        (= (k!127 x!0) Ptr!val!0)\n                        (= (k!127 x!0) Ptr!val!3)\n                        (= (k!127 x!0) Ptr!val!2))\n                    2\n                    18)))\n    (let ((a!2 (ite (or (= (k!127 x!0) Ptr!val!9)\n                        (= (k!127 x!0) Ptr!val!6)\n                        (= (k!127 x!0) Ptr!val!8)\n                        (= (k!127 x!0) Ptr!val!12)\n                        (= (k!127 x!0) Ptr!val!7)\n                        (= (k!127 x!0) Ptr!val!10))\n                    9\n                    (ite (= (k!127 x!0) Ptr!val!1) 6 a!1))))\n    (let ((a!3 (ite (or (= (k!127 x!0) Ptr!val!15)\n                        (= (k!127 x!0) Ptr!val!14)\n                        (= (k!127 x!0) Ptr!val!13))\n                    2\n                    a!2)))\n    (let ((a!4 (ite (or (= (k!127 x!0) Ptr!val!19) (= (k!127 x!0) Ptr!val!17))\n                    2\n                    (ite (= (k!127 x!0) Ptr!val!16) 9 a!3))))\n      (ite (or (= (k!127 x!0) Ptr!val!11) (= (k!127 x!0) Ptr!val!18)) 9 a!4))))))\n  (define-fun new-next ((x!0 Ptr)) Ptr\n    (ite (= x!0 Ptr!val!0) Ptr!val!1\n    (ite (= x!0 Ptr!val!2) Ptr!val!3\n    (ite (= x!0 Ptr!val!3) Ptr!val!4\n    (ite (= x!0 Ptr!val!4) Ptr!val!5\n    (ite (= x!0 Ptr!val!5) Ptr!val!1\n    (ite (= x!0 Ptr!val!6) Ptr!val!7\n    (ite (= x!0 Ptr!val!1) Ptr!val!0\n    (ite (= x!0 Ptr!val!12) Ptr!val!6\n    (ite (= x!0 Ptr!val!13) Ptr!val!14\n    (ite (= x!0 Ptr!val!14) Ptr!val!2\n    (ite (= x!0 Ptr!val!15) Ptr!val!13\n    (ite (= x!0 Ptr!val!16) Ptr!val!12\n    (ite (= x!0 Ptr!val!17) Ptr!val!15\n    (ite (= x!0 Ptr!val!19) Ptr!val!17\n    (ite (= x!0 Ptr!val!7) Ptr!val!8\n    (ite (= x!0 Ptr!val!18) Ptr!val!16\n    (ite (= x!0 Ptr!val!11) Ptr!val!1\n    (ite (= x!0 Ptr!val!10) Ptr!val!11\n    (ite (= x!0 Ptr!val!9) Ptr!val!10\n    (ite (= x!0 Ptr!val!8) Ptr!val!9\n      (next x!0))))))))))))))))))))))\n  (define-fun new-prio ((x!0 Ptr)) Int\n    (ite (= x!0 Ptr!val!3) 4\n    (ite (= x!0 Ptr!val!0) 4\n    (ite (= x!0 Ptr!val!4) 4\n    (ite (= x!0 Ptr!val!2) 4\n    (ite (= x!0 Ptr!val!5) 4\n    (ite (= x!0 Ptr!val!1) 5\n    (ite (= x!0 Ptr!val!7) 8\n    (ite (= x!0 Ptr!val!6) 7\n    (ite (= x!0 Ptr!val!12) 11\n    (ite (= x!0 Ptr!val!13) 4\n    (ite (= x!0 Ptr!val!14) 4\n    (ite (= x!0 Ptr!val!15) 4\n    (ite (= x!0 Ptr!val!17) 4\n    (ite (= x!0 Ptr!val!19) 4\n    (ite (= x!0 Ptr!val!8) 10\n    (ite (= x!0 Ptr!val!16) 12\n    (ite (= x!0 Ptr!val!18) 13\n    (ite (= x!0 Ptr!val!9) 14\n    (ite (= x!0 Ptr!val!11) 15\n    (ite (= x!0 Ptr!val!10) 16\n      (prio x!0))))))))))))))))))))))\n  (define-fun new-state ((x!0 Ptr)) Int\n    (ite (= x!0 Ptr!val!0) 3\n    (ite (= x!0 Ptr!val!3) 2\n    (ite (= x!0 Ptr!val!2) 2\n    (ite (= x!0 Ptr!val!4) 2\n    (ite (= x!0 Ptr!val!5) 2\n    (ite (= x!0 Ptr!val!1) 6\n    (ite (= x!0 Ptr!val!7) 9\n    (ite (= x!0 Ptr!val!6) 9\n    (ite (= x!0 Ptr!val!12) 9\n    (ite (= x!0 Ptr!val!13) 2\n    (ite (= x!0 Ptr!val!14) 2\n    (ite (= x!0 Ptr!val!15) 2\n    (ite (= x!0 Ptr!val!17) 2\n    (ite (= x!0 Ptr!val!19) 2\n    (ite (= x!0 Ptr!val!16) 9\n    (ite (= x!0 Ptr!val!8) 9\n    (ite (= x!0 Ptr!val!18) 9\n    (ite (= x!0 Ptr!val!11) 9\n    (ite (= x!0 Ptr!val!10) 9\n    (ite (= x!0 Ptr!val!9) 9\n      (state x!0))))))))))))))))))))))\n)\nnull is\nPtr!val!1\nbad-ptr is\nPtr!val!2\nIn the new state, bad-ptr.next is\nPtr!val!3\nIn the new state, bad-ptr.next.prev is\nPtr!val!0\n","error":"","status":"z3-ran","hash":"8832e568be9cb13772b42b7a17143a585e5e040d"}
